function commandCase() {
	echo
	echo "Enter a command in the format COMMAND [FLAG] PARAMETER (s to skip):"
	read -p "$PWD > " inputCom ComArg1 ComArg2
	case "$inputCom" in
		"cd")
    		if [ -d $ComArg1 ]; then
    			echo "Climbing to $ComArg1..."
	    		cd $ComArg1
    		else 
    			echo "$ComArg1 is not a directory.."
    			echo
	    		scareSpecific
    		fi
    		commandCase
    		;;
    		"ls")
			if [ "$ComArg1" == "-a" ] || [ "$ComArg1" == "-la" ] || [ "$ComArg1" == "-al" ] || [ -d $ComArg1 ] || [ -f $ComArg1 ]; then
	    			if [ -d $ComArg2 ] || [ -f $ComArg2 ] || [ -z $ComArg2 ];then
    					ls $ComArg1 $ComArg2
    				else
    					echo "$ComArg2 is not a file or directory..."
	    				echo
    					scareSpecific
    				fi
			else 
    				echo "$ComArg1 is not a valid argument..."
	    			echo
		    		scareSpecific
    			fi
    			commandCase
		;;
    		"cat")
			pathVar1=$( echo "$ComArg1" | awk -F'/' '{print $1}' )
			pathVar2=$( echo "$ComArg1" | awk -F'/' '{print $2}' )
			pathVar3=$( echo "$ComArg1" | awk -F'/' '{print $3}' )
			pathVar4=$( echo "$ComArg1" | awk -F'/' '{print $4}' )
			if [ -f $ComArg1 ] && [ ! -z $ComArg1 ]; then
				cat $ComArg1
				echo
       				birdTestVar=$( cat $ComArg1 )
				if [ $birdTestVar == "BIRD!" ]; then
          				echo "You caught this bird!" > $ComArg1
          				(( birdCount = $birdCount + 1 ))
					continue
        			fi
			elif [ -z $ComArg1 ]; then
				echo "No argument passed to cat..."
				echo
				scareSpecific
			elif [ ! -z $ComArg1 ]; then
				if [ -f "$pathVar1/$pathVar2/$pathVar3/$pathVar4" ] || [ -d "$pathVar1/$pathVar2/$pathVar3/$pathVar4" ] && [ ! -z $pathVar4 ]; then
            				echo "test1"
					echo
					scareSpecific
				elif [ -f "$pathVar1/$pathVar2/$pathVar3" ] || [ -d "$pathVar1/$pathVar2/$pathVar3" ] && [ ! -z $pathVar3 ]; then
            				echo "test2"
					echo
					scareSpecific
          			elif [ -f "$pathVar1/$pathVar2" ] || [ -d "$pathVar1/$pathVar2" ] && [ ! -z $pathVar2 ]; then
            				echo "test3"
					echo
					scareSpecific
				elif [ -f $pathVar1 ] || [ -d $pathVar1 ] && [ ! -z $pathVar1 ]; then
            				echo "test4"
					echo
					scareSpecific
         			fi
				echo "$ComArg1 is not a viable pathname or file..."
				echo
				scareSpecific
			else 
				echo "$ComArg1 is not a file..."
				echo
				scareSpecific
			fi
			commandCase
		;;
		"chmod")
			if [ "$ComArg1" == "+rwx" ] || [ "$ComArg1" == "+wrx" ] || [ "$ComArg1" == "+xrw" ] || [ "$ComArg1" == "+rxw" ] || [ "$ComArg1" == "+xwr" ] || [ "$ComArg1" == "+wxr" ] || [ "$ComArg1" == "+x" ] || [ "$ComArg1" == "+w" ] || [ "$ComArg1" == "+r" ] || [ "$ComArg1" == "+rw" ]  || [ "$ComArg1" == "+wr" ] || [ "$ComArg1" == "+xw" ] || [ "$ComArg1" == "+wx" ]  || [ "$ComArg1" == "+rx" ]  || [ "$ComArg1" == "+xr" ]; then
				if [ -d $ComArg2 ] || [ -f $ComArg2 ]; then
					chmod $ComArg1 $ComArg2
				fi
			else
				echo "$ComArg1 and/or $ComArg2 are not valid arguments..."
			fi
			commandCase
		;;
		s|S|"Skip")
		;;
		q|Q)
			exit
		;;
		*)
			echo "$inputCom is not a valid command..."
			echo
			scareSpecific
			commandCase
		;;
	esac
}
